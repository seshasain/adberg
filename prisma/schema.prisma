// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String   @unique
  name      String?
  avatar    String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  // Supabase auth user ID
  authId String @unique @map("auth_id") @db.Uuid

  // User profile information
  company   String?
  role      String?
  phone     String?

  // Subscription and usage tracking
  plan         String   @default("free") // free, pro, enterprise
  creditsUsed  Int      @default(0) @map("credits_used")
  creditsLimit Int      @default(100) @map("credits_limit")

  // Relationships
  projects Project[]

  @@map("users")
}

model Tool {
  id          String   @id @default(cuid())
  name        String   @unique
  description String
  category    String   // e.g., 'Image', 'Video', 'Marketing'
  path        String   @unique // e.g., '/tools/image-enhancer'
  icon        String?  // e.g., 'image', 'video', 'bar-chart'
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relationships
  projects Project[]

  @@map("tools")
}

model Project {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title       String
  description String?
  status      String   @default("draft") // draft, in_progress, review, completed
  projectData Json?    @map("project_data") // Flexible storage for tool-specific data
  thumbnailUrl String? @map("thumbnail_url")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  // Relationships
  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  toolId String @map("tool_id")
  tool   Tool   @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@map("projects")
}
